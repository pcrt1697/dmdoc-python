[build-system]
requires = ["setuptools >= 80.7.1"]
build-backend = "setuptools.build_meta"

[project]
name='dmdoc-python'
version = '0.1'
description = "Data Model documentation generator."
readme = "README.md"
requires-python = ">=3.12"
dependencies = [
    'click>=8.2.0',
    'pydantic>=2.11.4',
    'PyYAML>=6.0.2',
]

[tool.setuptools.package-dir]
logmaster = "./src/dmdoc"

[project.optional-dependencies]
markdown = [
    'mdutils>=1.6',
]
sqlalchemy = [
    'sqlalchemy>=2.0.41',
]
beanie = [
    'beanie>=1.29'
]

[project.entry-points."dmdoc.sources"]
sqlalchemy = "dmdoc.core.source.sqlalchemy_source:SQLAlchemySource"

[project.entry-points."dmdoc.sink.datatypes"]
# primitive types
boolean = "dmdoc.core.sink.data_type:BooleanDataType"
integer = "dmdoc.core.sink.data_type:IntegerDataType"
number = "dmdoc.core.sink.data_type:NumberDataType"
bytes = "dmdoc.core.sink.data_type:BytesDataType"
string = "dmdoc.core.sink.data_type:StringDataType"
date = "dmdoc.core.sink.data_type:DateDataType"
datetime = "dmdoc.core.sink.data_type:DatetimeDataType"
time = "dmdoc.core.sink.data_type:TimeDataType"
# complex types
enum = "dmdoc.core.sink.data_type:EnumDataType"
array = "dmdoc.core.sink.data_type:ArrayDataType"
map = "dmdoc.core.sink.data_type:MapDataType"
union = "dmdoc.core.sink.data_type:UnionDataType"
object = "dmdoc.core.sink.data_type:ObjectDataType"
objectId = "dmdoc.core.sink.data_type:ObjectIdDataType"

[project.entry-points."dmdoc.formats"]
markdown = "dmdoc.core.formatter.markdown_formatter:MarkdownFormatter"
